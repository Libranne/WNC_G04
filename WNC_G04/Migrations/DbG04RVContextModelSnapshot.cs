// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WNC_G04.Models;

#nullable disable

namespace WNC_G04.Migrations
{
    [DbContext(typeof(DbG04RVContext))]
    partial class DbG04RVContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WNC_G04.Models.BaiViet", b =>
                {
                    b.Property<int>("MaBaiViet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBaiViet"));

                    b.Property<string>("AnhBaiViet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaChuDe")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoLuongLike")
                        .HasColumnType("int")
                        .HasColumnName("luotthich");

                    b.HasKey("MaBaiViet");

                    b.HasIndex("MaChuDe");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("BaiViet", (string)null);
                });

            modelBuilder.Entity("WNC_G04.Models.BinhLuan", b =>
                {
                    b.Property<int>("MaBinhLuan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBinhLuan"));

                    b.Property<int?>("MaBaiViet")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBinhLuan");

                    b.HasIndex("MaBaiViet");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("BinhLuan", (string)null);
                });

            modelBuilder.Entity("WNC_G04.Models.ChuDe", b =>
                {
                    b.Property<int>("MaChuDe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChuDe"));

                    b.Property<string>("TenChuDe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaChuDe");

                    b.ToTable("ChuDe", (string)null);
                });

            modelBuilder.Entity("WNC_G04.Models.NguoiDung", b =>
                {
                    b.Property<int>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiDung"));

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmMatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TieuSu")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MaNguoiDung");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("WNC_G04.Models.TheoDoi", b =>
                {
                    b.Property<int>("MaTheoDoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTheoDoi"));

                    b.Property<int?>("MaNguoiDuocTheoDoi")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiTheoDoi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MaTheoDoi");

                    b.HasIndex("MaNguoiDuocTheoDoi");

                    b.HasIndex("MaNguoiTheoDoi", "MaNguoiDuocTheoDoi")
                        .IsUnique()
                        .HasFilter("[MaNguoiTheoDoi] IS NOT NULL AND [MaNguoiDuocTheoDoi] IS NOT NULL");

                    b.ToTable("TheoDoi", (string)null);
                });

            modelBuilder.Entity("WNC_G04.Models.Thich", b =>
                {
                    b.Property<int>("MaThich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThich"));

                    b.Property<int?>("MaBaiViet")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.HasKey("MaThich");

                    b.HasIndex("MaBaiViet");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("Thich", (string)null);
                });

            modelBuilder.Entity("WNC_G04.Models.ThongBao", b =>
                {
                    b.Property<int>("MaThongBao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThongBao"));

                    b.Property<string>("LoaiThongBao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaBaiViet")
                        .HasColumnType("int");

                    b.Property<int?>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MaThongBao");

                    b.HasIndex("MaBaiViet");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("ThongBao", (string)null);
                });

            modelBuilder.Entity("WNC_G04.Models.BaiViet", b =>
                {
                    b.HasOne("WNC_G04.Models.ChuDe", "MaChuDeNavigation")
                        .WithMany("BaiViets")
                        .HasForeignKey("MaChuDe");

                    b.HasOne("WNC_G04.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany("BaiViets")
                        .HasForeignKey("MaNguoiDung");

                    b.Navigation("MaChuDeNavigation");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("WNC_G04.Models.BinhLuan", b =>
                {
                    b.HasOne("WNC_G04.Models.BaiViet", "MaBaiVietNavigation")
                        .WithMany("BinhLuans")
                        .HasForeignKey("MaBaiViet");

                    b.HasOne("WNC_G04.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany("BinhLuans")
                        .HasForeignKey("MaNguoiDung");

                    b.Navigation("MaBaiVietNavigation");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("WNC_G04.Models.TheoDoi", b =>
                {
                    b.HasOne("WNC_G04.Models.NguoiDung", "MaNguoiDuocTheoDoiNavigation")
                        .WithMany("TheoDoiMaNguoiDuocTheoDoiNavigations")
                        .HasForeignKey("MaNguoiDuocTheoDoi");

                    b.HasOne("WNC_G04.Models.NguoiDung", "MaNguoiTheoDoiNavigation")
                        .WithMany("TheoDoiMaNguoiTheoDoiNavigations")
                        .HasForeignKey("MaNguoiTheoDoi");

                    b.Navigation("MaNguoiDuocTheoDoiNavigation");

                    b.Navigation("MaNguoiTheoDoiNavigation");
                });

            modelBuilder.Entity("WNC_G04.Models.Thich", b =>
                {
                    b.HasOne("WNC_G04.Models.BaiViet", "MaBaiVietNavigation")
                        .WithMany("Thiches")
                        .HasForeignKey("MaBaiViet");

                    b.HasOne("WNC_G04.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany("Thiches")
                        .HasForeignKey("MaNguoiDung");

                    b.Navigation("MaBaiVietNavigation");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("WNC_G04.Models.ThongBao", b =>
                {
                    b.HasOne("WNC_G04.Models.BaiViet", "MaBaiVietNavigation")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaBaiViet");

                    b.HasOne("WNC_G04.Models.NguoiDung", "MaNguoiDungNavigation")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaNguoiDung");

                    b.Navigation("MaBaiVietNavigation");

                    b.Navigation("MaNguoiDungNavigation");
                });

            modelBuilder.Entity("WNC_G04.Models.BaiViet", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("Thiches");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("WNC_G04.Models.ChuDe", b =>
                {
                    b.Navigation("BaiViets");
                });

            modelBuilder.Entity("WNC_G04.Models.NguoiDung", b =>
                {
                    b.Navigation("BaiViets");

                    b.Navigation("BinhLuans");

                    b.Navigation("TheoDoiMaNguoiDuocTheoDoiNavigations");

                    b.Navigation("TheoDoiMaNguoiTheoDoiNavigations");

                    b.Navigation("Thiches");

                    b.Navigation("ThongBaos");
                });
#pragma warning restore 612, 618
        }
    }
}
